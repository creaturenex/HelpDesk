/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as TicketNewImport } from './routes/ticket/new'
import { Route as TicketIdImport } from './routes/ticket/$id'
import { Route as TicketidEditImport } from './routes/ticket/$_id.edit'

// Create Virtual Routes

const TicketsLazyImport = createFileRoute('/tickets')()
const LoginLazyImport = createFileRoute('/login')()
const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const TicketsLazyRoute = TicketsLazyImport.update({
  path: '/tickets',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/tickets.lazy').then((d) => d.Route))

const LoginLazyRoute = LoginLazyImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/login.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const TicketNewRoute = TicketNewImport.update({
  path: '/ticket/new',
  getParentRoute: () => rootRoute,
} as any)

const TicketIdRoute = TicketIdImport.update({
  path: '/ticket/$id',
  getParentRoute: () => rootRoute,
} as any)

const TicketidEditRoute = TicketidEditImport.update({
  path: '/ticket/$_id/edit',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginLazyImport
      parentRoute: typeof rootRoute
    }
    '/tickets': {
      id: '/tickets'
      path: '/tickets'
      fullPath: '/tickets'
      preLoaderRoute: typeof TicketsLazyImport
      parentRoute: typeof rootRoute
    }
    '/ticket/$id': {
      id: '/ticket/$id'
      path: '/ticket/$id'
      fullPath: '/ticket/$id'
      preLoaderRoute: typeof TicketIdImport
      parentRoute: typeof rootRoute
    }
    '/ticket/new': {
      id: '/ticket/new'
      path: '/ticket/new'
      fullPath: '/ticket/new'
      preLoaderRoute: typeof TicketNewImport
      parentRoute: typeof rootRoute
    }
    '/ticket/$_id/edit': {
      id: '/ticket/$_id/edit'
      path: '/ticket/$_id/edit'
      fullPath: '/ticket/$_id/edit'
      preLoaderRoute: typeof TicketidEditImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexLazyRoute,
  LoginLazyRoute,
  TicketsLazyRoute,
  TicketIdRoute,
  TicketNewRoute,
  TicketidEditRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/login",
        "/tickets",
        "/ticket/$id",
        "/ticket/new",
        "/ticket/$_id/edit"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/login": {
      "filePath": "login.lazy.tsx"
    },
    "/tickets": {
      "filePath": "tickets.lazy.tsx"
    },
    "/ticket/$id": {
      "filePath": "ticket/$id.tsx"
    },
    "/ticket/new": {
      "filePath": "ticket/new.tsx"
    },
    "/ticket/$_id/edit": {
      "filePath": "ticket/$_id.edit.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
